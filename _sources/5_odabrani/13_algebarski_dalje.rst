Још неки алгебарски алгоритми
=============================

Заинтересованим читаоцима предлажемо неколико тема као следеће кораке за самостално проучавање.

Брзи тест прималности
---------------------

Као што смо научили, провера да ли је дати број :math:`n` прост у општем случају захтева време 
сразмерно са :math:`\sqrt n`. Није познат егзактан алгоритам за овај проблем, који је асимптотски 
ефикаснији од :math:`\Theta(\sqrt n)`. Зато је од практичног значаја познавање алгоритама који дају 
одговор веома брзо, мада не гарантују увек тачан резултат. Један такав алгоритам се заснива на 
`малој Фермаовој теореми <https://sr.wikipedia.org/wiki/Мала_Фермаова_теорема>`_, а познат је као 
`Фермаов тест за просте бројеве <https://sr.wikipedia.org/wiki/Фермаов_тест_за_просте_бројеве>`_.
Проблему ефикасног, мада не сасвим поузданог утврђивања прималности бројева је посвећен и задатак 
`Велики прости пројеви <https://petlja.org/biblioteka/r/Zbirka3/veliki_prosti_brojevi>`_ у Петљиној 
онлајн збирци задатака.

.. comment

    Вилсонова теорема
    https://www.gcsu.edu/sites/files/page-assets/node-808/attachments/maxey.pdf

Ојлерова функција и Ојлерова теорема
------------------------------------

`Ојлерова фи функција <https://sr.wikipedia.org/wiki/Ојлерова_фи_функција>`_ је тема задатка 
`Ојлерова функција <https://petlja.org/biblioteka/r/Zbirka3/ojlerova_funkcija>`_ из Петљине 
онлајн збирке. Ова функција се појављује у `Ојлеровој теореми <https://sr.wikipedia.org/wiki/Ојлерова_теорема>`_, 
која је значајна јер се на њу ослања чувени `RSA алгоритам <https://sr.wikipedia.org/wiki/RSA_(алгоритам)>`_.

**Дефиниција**: За дато :math:`n`, Ојлерова функција :math:`\varphi(n)` једнака је броју природних 
бројева мањих или једнаких од :math:`n` и узајамно простих са :math:`n`:

.. math::

    \varphi(n) = \left|\{ m \in \mathbb{N} : m \leq  n \land nzd(m,n) = 1\}\right|

Ова функција има једну важну особину, а то је да за узајамно просте :math:`a, b` важи 
:math:`\varphi(a \cdot b)=\varphi(a) \cdot \varphi(b)`. Ова особина функције :math:`\varphi` се 
назива **мултипликативност**. Захваљујући мултипликативности, вредност функције за било које :math:`n` 
може брзо да се израчуна када су познате вредности функције :math:`\varphi(p^k)` за просте бројеве 
:math:`p` и природне бројеве :math:`k`. Наиме, ако је позната факторизација броја :math:`n`, 
:math:`n=p_1^{\alpha_1} \cdot p_2^{\alpha_2} \cdots p_m^{\alpha_m}`, тада је 

.. math::


    \varphi(n) = \varphi(p_1^{\alpha_1}) \cdot \varphi(p_2^{\alpha_2}) \cdots \varphi(p_m^{\alpha_m})

Поред функције :math:`\varphi(n)`, постоје и друге мултипликативне функције. Вредности свих таквих функција 
се по правилу знатно ефикасније рачунају када се аргумент функције :math:`n` растави на просте чиниоце. 
Наравно, пре тога је потребно доказати мултипликативност функције и одредити вредности функције за 
аргументе који су степени простих бројева. 

Предлажемо читаоцима да покушају да докажу мултипликативност функције :math:`\varphi` и да одреде 
њене вредности за :math:`\varphi(p^k)`, где је :math:`p` прост број. У случају потребе, додатна 
упутства могу да се нађу у решењу поменутог задатка из Петљине онлајн збирке. Након тога, до ефикасног 
решења задатка се долази факторизацијом броја :math:`n`.


RSA алгоритам
-------------

RSA алгоритам смо поменули и у уводу поглавља о алгебарским алгоритмима, због његовог великог значаја 
у савременим комуникационим технологијама. Овај алгоритам и његове модификације су у основи многих 
комуникационих протокола, као што је безбедно слање порука, доказивање аутентичности учесника у 
комуникацији, дигитално потписивање докумената и слично. Нешто више о самом алгоритму можете 
да прочитате у поглављу `Криптографија <https://petlja.org/kurs/7193/7/3785>`_ Петљиног курса за 
четврти разред гимназије. `Детаљан опис RSA алгоритма <https://petlja.org/kurs/7193/7/3787>`_ је 
пар страница даље, али цело поглавље може да буде занимљиво. На пример, на страници `Kриптографијa 
и хеширање <https://petlja.org/kurs/7193/7/3789>`_ је објашњено како помоћу RSA алгоритма може да 
се потврди аутентичност поруке, односно како RSA алгоритам у комбинацији са хеширањем може да се 
искористи за пружање разних услуга у комуникацији на интернету, као што су: 

- провера веродостојности порука и фајлова
- генерисање и верификација дигиталног потписа
- верификација лозинки (без памћења самих лозинки)
- `доказ о раду <https://en.wikipedia.org/wiki/Proof_of_work>`_
